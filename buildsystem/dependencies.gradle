allprojects {
	repositories {
		google()
		jcenter()
	}
}

ext {
	versions << [
			// Android
			appCompat       : '1.0.0-rc02',
			ktx             : '1.0.0-rc02',
			lifecycle       : '2.0.0-alpha1',
			material        : '1.0.0-rc02',
			constraintLayout: '1.1.3',

			// Reactive
			rxJava          : '2.1.14',
			rxAndroid       : '2.0.1',
			rxKotlin        : '2.2.0',
			autoDispose     : '1.0.0-RC2',

			// Network
			retrofit        : '2.4.0',
			okHttp          : '3.11.0',

			// Other
			anko            : '0.10.6',
			autoFactory     : '1.0-beta5',
			dagger          : '2.17',
			timber          : '4.7.1',

			// Unit Testing
			junit           : '4.12',
			robolectric     : '3.8',
			mockitoKotlin   : '2.0.0-RC2',

			// Acceptance Testing
			runner          : '1.0.2',
			espresso        : '3.0.2']

	mainApplication = [
			// Kotlin
			kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
			// Android
			appCompat         : "androidx.appcompat:appcompat:${versions.appCompat}",
			coreKtx           : "androidx.core:core-ktx:${versions.ktx}",
			lifecycle         : "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}",
			lifecycleProcessor: "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}",
			constraintLayout  : "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}",
			// Reactive
			rxJava            : "io.reactivex.rxjava2:rxjava:${versions.rxJava}",
			rxAndroid         : "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}",
			rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}",
			// Other
			autoFactory       : "com.google.auto.factory:auto-factory:${versions.autoFactory}",
			dagger            : "com.google.dagger:dagger:${versions.dagger}",
			daggerAndroid     : "com.google.dagger:dagger-android-support:${versions.dagger}",
			daggerProcessor   : "com.google.dagger:dagger-compiler:${versions.dagger}"]

	coreComponent = [
			// Kotlin
			kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
			// Android
			appCompat         : "androidx.appcompat:appcompat:${versions.appCompat}",
			coreKtx           : "androidx.core:core-ktx:${versions.ktx}",
			collectionKtx     : "androidx.collection:collection-ktx:${versions.ktx}",
			lifecycle         : "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}",
			lifecycleProcessor: "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}",
			material          : "com.google.android.material:material:${versions.material}",
			// Reactive
			rxJava            : "io.reactivex.rxjava2:rxjava:${versions.rxJava}",
			rxAndroid         : "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}",
			rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}",
			autoDispose       : "com.uber.autodispose:autodispose-android-archcomponents-ktx:${versions.autoDispose}",
			// Network
			retrofit          : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
			retrofitRx        : "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
			retrofitJackson   : "com.squareup.retrofit2:converter-jackson:${versions.retrofit}",
			okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${versions.okHttp}",
			// Other
			anko              : "org.jetbrains.anko:anko-commons:${versions.anko}",
			ankoSdk21         : "org.jetbrains.anko:anko-sdk21:${versions.anko}",
			dagger            : "com.google.dagger:dagger:${versions.dagger}",
			daggerAndroid     : "com.google.dagger:dagger-android-support:${versions.dagger}",
			daggerProcessor   : "com.google.dagger:dagger-compiler:${versions.dagger}",
			timber            : "com.jakewharton.timber:timber:${versions.timber}"]

	unitTesting = [
			// Kotlin
			kotlin    : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
			kotlinTest: "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
			// Unit/Integration tests
			junit     : "junit:junit:${versions.junit}",
			mockito   : "com.nhaarman:mockito-kotlin:${versions.mockitoKotlin}"]

	acceptanceTesting = [
			// Acceptance tests
			testRunner     : "com.android.support.test:runner:${versions.runner}",
			espressoCore   : "com.android.support.test.espresso:espresso-core:${versions.espresso}",
			espressoIntents: "com.android.support.test.espresso:espresso-intents:${versions.espresso}"]
}
